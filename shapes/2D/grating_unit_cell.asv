

classdef grating_unit_cell < handle
   properties
       N
       xrange
       yrange
       epsilon
       
   end
   methods
        function [obj] = grating_unit_cell(xrange, yrange, N)
           obj.N = N;
           obj.xrange = xrange;
           obj.yrange=  yrange;
           obj.epsilon =ones(N);           
        end
        function [eps, nybounds, metal_bounds_nx] = ...
                add_grating(eps, L_unit_cell, epsilon_diel, epsilon_metal, ...
            fill_factor, thickness, y_center, x_center, lattice_constant)
            %add grating structure into an existing eps grid
            % add a single unit cell...
            % L is typically the size of the grid, but here really specifies the unit
            % cell

            if(nargin < 8)
               x_center = L_unit_cell(1)/2;
            end
            if(nargin <7)
               y_center = L_unit_cell(2)/2; 
            end
            if(nargin <9)
               lattice_constant = L_unit_cell(1); 
            end
            %y_center allows us to change the height of the grating on the y axis
            % N = size of the grid in nodes
            % L has the physical dimensions
            N = size(eps);
            Nx = N(1); Ny = N(2);
            Lx = L_unit_cell(1); Ly = L_unit_cell(2);
            lattice_n = (lattice_constant/L_unit_cell(1))*N(1);

            nxcenter = round(Nx*x_center/Lx);
            nycenter = round(Ny*y_center/Ly);

            metal_size = fill_factor*lattice_n;
            halfx = round(metal_size/2);
            lat_half = round(lattice_n/2);

            grating_size = round(Ny*(thickness/Ly));
            halfy = round(grating_size/2);
            %metallic center
            eps(nxcenter-halfx: nxcenter+halfx, nycenter-halfy:nycenter+halfy) = epsilon_metal;
            eps(nxcenter-lat_half+1:nxcenter-halfx, nycenter-halfy:nycenter+halfy) = epsilon_diel;
            eps(nxcenter+halfx:nxcenter+lat_half+1, nycenter-halfy:nycenter+halfy) = epsilon_diel;

            % sizing enforcement
            eps = eps(1:Nx, 1:Ny);

            nybounds = [nycenter-halfy, nycenter+halfy];
            metal_bounds_nx = [nxcenter-halfx, nxcenter+halfx];

        end       
   end
end